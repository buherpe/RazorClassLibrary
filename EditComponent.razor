@using Microsoft.AspNetCore.Components.Authorization
@using Microsoft.EntityFrameworkCore
@typeparam TEntity
@typeparam TView

@inject NavigationManager NavigationManager
@inject DbContext Context

<PageTitle>@View.GetName(): @Entity</PageTitle>

<h3>@View.GetName(): @Entity</h3>

@if (Loading)
{
    <div>Загрузка...</div>
}
else
{
    <p>
        <button @onclick="Save" type="button" class="btn btn-primary">Сохранить</button>

        @AdditionalButtonsTemplate
    </p>

    @MainTemplate

    @if (Entity is ICreatedModified createdModifiedEntity)
    {
        <hr/>
        <div class="input-group mb-3">
            <span class="input-group-text">Дата создания</span>
            <input class="form-control" readonly
           @bind-value="createdModifiedEntity.CreatedAt" />
        </div>
        <div class="input-group mb-3">
            <span class="input-group-text">Дата изменения</span>
            <input class="form-control" readonly
           @bind-value="createdModifiedEntity.ModifiedAt" />
        </div>
    }

    @FooterTemplate
}

@(Context.ChangeTracker.DebugView.LongView)
<div>EditComponent: @Context.ContextId</div>

@code {
    [CascadingParameter]
    public Task<AuthenticationState> AuthState { get; set; }

    [Parameter]
    public RenderFragment MainTemplate { get; set; }

    [Parameter]
    public RenderFragment AdditionalButtonsTemplate { get; set; }

    [Parameter]
    public RenderFragment FooterTemplate { get; set; }
}